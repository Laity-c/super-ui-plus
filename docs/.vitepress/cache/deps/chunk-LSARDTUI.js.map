{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/element-plus@2.11.1_vue@3.5.20_typescript@5.8.3_/packages/utils/vue/install.ts"],
  "sourcesContent": ["import { NOOP } from '../functions'\n\nimport type { App, Directive } from 'vue'\nimport type { SFCInstallWithContext, SFCWithInstall } from './typescript'\n\nexport const withInstall = <T, E extends Record<string, any>>(\n  main: T,\n  extra?: E\n) => {\n  ;(main as SFCWithInstall<T>).install = (app): void => {\n    for (const comp of [main, ...Object.values(extra ?? {})]) {\n      app.component(comp.name, comp)\n    }\n  }\n\n  if (extra) {\n    for (const [key, comp] of Object.entries(extra)) {\n      ;(main as any)[key] = comp\n    }\n  }\n  return main as SFCWithInstall<T> & E\n}\n\nexport const withInstallFunction = <T>(fn: T, name: string) => {\n  ;(fn as SFCWithInstall<T>).install = (app: App) => {\n    ;(fn as SFCInstallWithContext<T>)._context = app._context\n    app.config.globalProperties[name] = fn\n  }\n\n  return fn as SFCInstallWithContext<T>\n}\n\nexport const withInstallDirective = <T extends Directive>(\n  directive: T,\n  name: string\n) => {\n  ;(directive as SFCWithInstall<T>).install = (app: App): void => {\n    app.directive(name, directive)\n  }\n\n  return directive as SFCWithInstall<T>\n}\n\nexport const withNoopInstall = <T>(component: T) => {\n  ;(component as SFCWithInstall<T>).install = NOOP\n\n  return component as SFCWithInstall<T>\n}\n"],
  "mappings": ";;;;;AACY,IAAC,cAAc,CAAC,MAAM,UAAU;AAE1C,OAAK,UAAU,CAAC,QAAQ;AACtB,eAAW,QAAQ,CAAC,MAAM,GAAG,OAAO,OAAO,SAAS,OAAO,QAAQ,CAAA,CAAE,CAAC,GAAG;AACvE,UAAI,UAAU,KAAK,MAAM,IAAI;IACnC;EACA;AACE,MAAI,OAAO;AACT,eAAW,CAAC,KAAK,IAAI,KAAK,OAAO,QAAQ,KAAK,GAAG;AAE/C,WAAK,GAAG,IAAI;IAClB;EACA;AACE,SAAO;AACT;AACY,IAAC,sBAAsB,CAAC,IAAI,SAAS;AAE/C,KAAG,UAAU,CAAC,QAAQ;AAEpB,OAAG,WAAW,IAAI;AAClB,QAAI,OAAO,iBAAiB,IAAI,IAAI;EACxC;AACE,SAAO;AACT;AACY,IAAC,uBAAuB,CAAC,WAAW,SAAS;AAEvD,YAAU,UAAU,CAAC,QAAQ;AAC3B,QAAI,UAAU,MAAM,SAAS;EACjC;AACE,SAAO;AACT;AACY,IAAC,kBAAkB,CAAC,cAAc;AAE5C,YAAU,UAAU;AACpB,SAAO;AACT;",
  "names": []
}
